// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ProtoCache.Tests.fb
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Small : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_25_2_10(); }
  public static Small GetRootAsSmall(ByteBuffer _bb) { return GetRootAsSmall(_bb, new Small()); }
  public static Small GetRootAsSmall(ByteBuffer _bb, Small obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Small __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int I32 { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public bool Flag { get { int o = __p.__offset(6); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  public string Str { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStrBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetStrBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetStrArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<global::ProtoCache.Tests.fb.Small> CreateSmall(FlatBufferBuilder builder,
      int i32 = 0,
      bool flag = false,
      StringOffset strOffset = default(StringOffset)) {
    builder.StartTable(3);
    Small.AddStr(builder, strOffset);
    Small.AddI32(builder, i32);
    Small.AddFlag(builder, flag);
    return Small.EndSmall(builder);
  }

  public static void StartSmall(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddI32(FlatBufferBuilder builder, int i32) { builder.AddInt(0, i32, 0); }
  public static void AddFlag(FlatBufferBuilder builder, bool flag) { builder.AddBool(1, flag, false); }
  public static void AddStr(FlatBufferBuilder builder, StringOffset strOffset) { builder.AddOffset(2, strOffset.Value, 0); }
  public static Offset<global::ProtoCache.Tests.fb.Small> EndSmall(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<global::ProtoCache.Tests.fb.Small>(o);
  }
}


static public class SmallVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*I32*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*Flag*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 8 /*Str*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
